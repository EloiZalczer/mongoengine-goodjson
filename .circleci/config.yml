version: 2.1
testSteps: &testSteps
  steps:
    - attach_workspace:
        at: ../
    - restore_cache:
        keys:
          - ci-{{ .Branch }}-{{ checksum "poetry.lock" }}-${PYENV}
    - run :
        name: "Run Venv"
        command: |
          if [ ${PYENV} -ge 3 ]; then
            python -m venv ./venv
          else
            virtualenv ./venv
          fi
    - run:
        name: "Install Dependencies"
        command: |
          source ./venv/bin/activate &&
          pip install --upgrade poetry &&
          poetry install
    - save_cache:
        key: ci-{{ .Branch }}-{{ checksum "poetry.lock" }}-${PYENV}
        paths:
          - "./venv"
    - run:
        name: "Test & Upload the coverage"
        command: |
          source ./venv/bin/activate &&
          ../reporter/cc-test-reporter before-build &&
          tox -e ${PYENV};
          coverage erase &&
          coverage combine &&
          coverage xml &&
          ../reporter/cc-test-reporter format-coverage \
            -t coverage.py -o ../reporter/covs/coverage.${PYENV}.json
    - persist_to_workspace:
        root: ../
        paths:
          - reporter/covs
jobs:
  build:
    docker:
      - image: buildpack-deps:latest
    working_directory: ~/
    steps:
      - checkout:
          path: ./ci
      - run: mkdir reporter
      - run:
          name: Download coverage reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 \
              -o ./reporter/cc-test-reporter
      - run: chmod uog+x ./reporter/cc-test-reporter
      - persist_to_workspace:
          root: ./
          paths:
            - reporter/cc-test-reporter
            - ci
  testPy3:
    docker:
      - image: python:3
        environment:
          PYENV: 3
    working_directory: ~/ci
    <<: *testSteps
  testPy2:
    docker:
      - image: python:2
        environment:
          PYENV: 2
    working_directory: ~/ci
    <<: *testSteps
  aggregate:
    docker:
      - image: alpine:latest
    working_directory: ~/reporter
    steps:
      - attach_workspace:
          at: ../
      - run: ./cc-test-reporter sum-coverage covs/*.json -p 2 -o /tmp/covsum.json
      - run: ./cc-test-reporter upload-coverage -i /tmp/covsum.json
  deploy:
    docker:
      - image: python:latest
    working_directory: ~/ci
    steps:
      - attach_workspace:
          at: ../
      - run:
          name: "Generating version info"
          command: "echo -n ${CIRCLE_TAG} > VERSION"
      - run:
          name: "Deploy"
          command: "source ./venv/bin/activate && poetry build -f sdist"
      - run:
          name: "Deploy"
          command: "source ./venv/bin/activate && poetry publish"

release_filter: &release_filter
  tags:
    only: /^(?:[0-9]+\.){2}[0-9].*/
  branches:
    ignore: /.*/

dev_filter: &dev_filter
  tags:
    ignore: /^(?:[0-9]+\.){2}[0-9].*/

workflows:
  version: 2
  default:
    jobs:
      - build:
          filters:
            << : *dev_filter
      - testPy2:
          requires:
            - build
          filters:
            << : *dev_filter
      - testPy3:
          requires:
            - build
          filters:
            << : *dev_filter
      - aggregate:
          requires:
            - testPy2
            - testPy3
          filters:
            << : *dev_filter
  version_tag:
    jobs:
      - build:
          filters:
            << : *release_filter
      - testPy2:
          requires:
            - build
          filters:
            << : *release_filter
      - testPy3:
          requires:
            - build
          filters:
            << : *release_filter
      - aggregate:
          requires:
            - testPy2
            - testPy3
          filters:
            << : *release_filter
      - deploy:
          requires:
            - testPy2
            - testPy3
          filters:
            << : *release_filter
